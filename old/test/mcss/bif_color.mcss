body{
    // getter operator
    //===========================
    //

    // get red channel
    color: red(#ffccdd);
    // equals with
    color: r-adjust(#ffccdd);
    // equals with
    color: -adjust(#ffccdd, 'red');

    // get blue channel
    color: blue(#ffccdd);
    // equals with
    color: b-adjust(#ffccdd);
    // equals with
    color: -adjust(#ffccdd, 'blue');
    
    // get green channel
    color: green(#ffccdd);
    // equals with
    color: g-adjust(#ffccdd);
    // equals with
    color: -adjust(#ffccdd, 'green');

    // get alpha channel
    // color: alpha(#ffccdd);@warn no alpha function
    // equals with
    color: a-adjust(#ffccdd);
    // equals with
    color: -adjust(#ffccdd, 'alpha');

    // get hue channel
    color: hue(#ffccdd);
    // equals with
    color: h-adjust(#ffccdd);
    // equals with
    color: -adjust(#ffccdd, 'hue');

    // get saturation channel
    color: saturation(#ffccdd);
    // equals with
    color: s-adjust(#ffccdd);
    // equals with
    color: -adjust(#ffccdd, 'saturation');

    // get lightness channel
    color: lightness(#ffccdd);
    // equals with
    color: l-adjust(#ffccdd);
    // equals with
    color: -adjust(#ffccdd, 'lightness');


/**
 * __relative__ color channel adjustment
 *=======================================
 */

    // red already touch the ceil 255, so has no affect;
    color: red(#ffccdd, 10);
    // equals with
    color: r-adjust(#ffccdd, 10);
    // equals with
    color: -adjust(#ffccdd, 'red', 10);

    // blue already touch the floor 0, so has no affect;
    color: blue(#ffcc00, -10);
    // equals with
    color: b-adjust(#ffcc00, -10);
    // equals with
    color: -adjust(#ffcc00, 'blue', -10);
    
    color: green(#ffccdd, 10);
    // equals with
    color: g-adjust(#ffccdd, 10);
    // equals with
    color: -adjust(#ffccdd, 'green', 10);

    //@warn no alpha function
    color: fade(#ffccdd, -0.1);
    // equals with
    color: a-adjust(#ffccdd, -0.1);
    // equals with
    color: -adjust(#ffccdd, 'alpha', -0.1);

    color: hue(#ffccdd, 10);
    // equals with
    color: h-adjust(#ffccdd, 10);
    // equals with
    color: -adjust(#ffccdd, 'hue', 10);

    color: saturation(#ffccdd, 20%);
    // equals with
    color: s-adjust(#ffccdd, 20%);
    // equals with
    color: -adjust(#ffccdd, 'saturation', 20%);

    color: lightness(#eeccdd, -30%);
    // equals with
    color: l-adjust(#eeccdd, -30%);
    // equals with
    color: -adjust(#eeccdd, 'lightness', -30%);

/**
 * __absolute__ color channel adjustment
 *=======================================
 */

    color: red(#ffccdd, 211, true);
    // equals with
    color: r-adjust(#ffccdd, 211, true);
    // equals with
    color: -adjust(#ffccdd, 'red', 211, true);

    color: blue(#ffcc00, 211, true);
    // equals with
    color: b-adjust(#ffcc00, 211, true);
    // equals with
    color: -adjust(#ffcc00, 'blue', 211, true);
    
    color: green(#ffccdd, 211, true);
    // equals with
    color: g-adjust(#ffccdd, 211, true);
    // equals with
    color: -adjust(#ffccdd, 'green', 211, true);

    // get alpha channel
    //@warn no alpha function
    color: fade(#ffccdd, 0.8, true);
    // equals with
    color: a-adjust(#ffccdd, 0.8, true);
    // equals with
    color: -adjust(#ffccdd, 'alpha', 0.8, true);

    // get hue channel
    color: hue(#ffccdd, 211, true);
    // equals with
    color: h-adjust(#ffccdd, 211, true);
    // equals with
    color: -adjust(#ffccdd, 'hue', 211, true);

    // get saturation channel
    color: saturation(#ffccdd, 20%, true);
    // equals with
    color: s-adjust(#ffccdd, 20%, true);
    // equals with
    color: -adjust(#ffccdd, 'saturation', 20%, true);

    // get lightness channel
    color: lightness(#eeccdd, 30%, true);
    // equals with
    color: l-adjust(#eeccdd, 30%, true);
    // equals with
    color: -adjust(#eeccdd, 'lightness', 30%, true);


    /**
     * other Color functions
     */

    // mix
    color: mix(rgba(100,0,0, 1), rgba(0,100,0, 0.5));
}